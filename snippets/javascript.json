{
	"SuiteScript Suitelet 2.1": {
		"prefix": "suitelet2_1",
		"body": [
		  "/** ",
		  " *@NApiVersion 2.1",
		  " *@NScriptType Suitelet",
		  "*/",
		  "/*jshint esversion: 9*/",
		  "define(['N/ui/serverWidget'],",
		  "    (serverWidget) => {",
		  "        const onRequest = context => {",
		  "            if (context.request.method === 'GET') {",
		  "                ",
		  "            } else {",
		  "                ",
		  "            }",
		  "        };",
		  "",
		  "        return {",
		  "            onRequest:onRequest",
		  "        };",
		  "    }",
		  ");"
		],
		"description": "NetSuite SuiteScript Type Suitelet in SS2.1"
	},
	"SuiteScript Suitelet 2.0": {
		"prefix": "suitelet2_0",
		"body": [
			"/** ",
			" *@NApiVersion 2.0",
			" *@NScriptType Suitelet",
			"*/",
			"/*jshint esversion: 5*/",
			"define(['N/ui/serverWidget'],",
			"    function (serverWidget) {",
			"        function onRequest(context) {",
			"            if (context.request.method === 'GET') {",
			"                ",
			"            } else {",
			"                ",
			"            }",
			"        }",
			"",
			"        return {",
			"            onRequest:onRequest",
			"        };",
			"    }",
			");"
		],
		"description": "NetSuite SuiteScript Type Suitelet in SS2.0"
	},
	"SuiteScript UserEvent 2.1": {
		"prefix": "userevent2_1",
		"body": [
			"/**",
			" *@NApiVersion 2.1",
			" *@NScriptType UserEventScript",
			" */",
			"/*jshint esversion: 9*/",
			"define(['N/record'],",
			"    (record) => {",
			"        const beforeLoad = context => {",
			"            let newRec = context.newRecord;",
			"        };",
			"",
			"        const beforeSubmit = context => {",
			"            let newRec = context.newRecord;",
			"        };",
			"",
			"        const afterSubmit = context => {",
			"            let newRec = context.newRecord;",
			"        };",
			"",
			"        return {",
			"            beforeSubmit: beforeSubmit,",
			"            afterSubmit: afterSubmit,",
			"            beforeLoad: beforeLoad",
			"        };",
			"    }",
			");"
		],
		"description": "NetSuite SuiteScript Type User Event in SS2.1"
	},
	"SuiteScript UserEvent 2.0": {
		"prefix": "userevent2_0",
		"body": [
		  "/**",
			" *@NApiVersion 2.0",
			" *@NScriptType UserEventScript",
			" */",
			"/*jshint esversion: 5*/",
			"define(['N/record'],",
			"    function (record) {",
			"        function beforeLoad(context) {",
			"            var newRec = context.newRecord;",
			"        }",
			"",
			"        function beforeSubmit(context) {",
			"            var newRec = context.newRecord;",
			"        }",
			"",
			"        function afterSubmit(context) {",
			"            var newRec = context.newRecord;",
			"        }",
			"",
			"        return {",
			"            beforeSubmit: beforeSubmit,",
			"            afterSubmit: afterSubmit,",
			"            beforeLoad: beforeLoad",
			"        };",
			"    }",
			");"
		],
		"description": "NetSuite SuiteScript Type User Event in SS2.0"
	},
	"SuiteScript Map/Reduce 2.1": {
		"prefix": "mapreduce2_1",
		"body": [
			"/**",
			" * @NApiVersion 2.1",
			" * @NScriptType MapReduceScript",
			" */",
			"/* jshint esversion: 9 */",
			"define(['N/record'],",
			"    (record) => {",
			"        const getInputData = (inputContext) => {",
			"            let sql = `",
			"            SELECT t.entity AS customer",
			"                ,t.id AS invoice",
			"            FROM transaction AS t",
			"            WHERE t.type = 'CustInvc'",
			"                AND t.trandate >= BUILTIN.RELATIVE_RANGES('DAGO60', 'START')",
			"            `;",
			"",
			"            return {",
			"                type: 'suiteql',",
			"                query: sql,",
			"                params: []",
			"            };",
			"        };",
			"",
			"        const map = (mapContext) => {",
			"            //mapContext.value is returned as a string, JSON.parse it back to an Object",
			"            //parses to {\"types\":[\"INTEGER\",\"INTEGER\"],\"values\":[1,11]}",
			"            let mapValue = JSON.parse(mapContext.value);",
			"",
			"            //write back consolidating the Customer Id and send the array of invoices",
			"            mapContext.write(mapValue.values[0], mapValue.values[1]);",
			"        };",
			"",
			"        const reduce = (reduceContext) => {",
			"            let customerId = reduceContext.key;",
			"            let invoices = reduceContext.values;",
			"",
			"            invoices.forEach(element => {",
			"                log.debug('Invoice Id', element);",
			"            });",
			"        };",
			"",
			"        const summarize = (summaryContext) => {",
			"            ",
			"        };",
			"",
			"        return {",
			"            getInputData: getInputData,",
			"            map: map,",
			"            reduce: reduce,",
			"            summarize: summarize",
			"        };",
			"    }",
			");"
		],
		"description": "NetSuite SuiteScript Type Map/Reduce in SS2.1"
	},
	"SuiteScript Map/Reduce 2.0": {
		"prefix": "mapreduce2_0",
		"body": [
			"/**",
			" * @NApiVersion 2.0",
			" * @NScriptType MapReduceScript",
			" */",
			"/* jshint esversion: 5 */",
			"define(['N/record'],",
			"    function (record) {",
			"        function getInputData(inputContext) {",
			"            var sql = \"SELECT t.entity AS customer\\n\"+",
			"            \"    ,t.id AS invoice\\n\"+",
			"            \"FROM transaction AS t\\n\"+",
			"            \"WHERE t.type = 'CustInvc'\\n\"+",
			"            \"    AND t.trandate >= BUILTIN.RELATIVE_RANGES('DAGO60', 'START')\";",
			"",
			"            return {",
			"                type: 'suiteql',",
			"                query: sql,",
			"                params: []",
			"            };",
			"        }",
			"",
			"        function map(mapContext) {",
			"            //mapContext.value is returned as a string, JSON.parse it back to an Object",
			"            //parses to {\"types\":[\"INTEGER\",\"INTEGER\"],\"values\":[1,11]}",
			"            var mapValue = JSON.parse(mapContext.value);",
			"",
			"            //write back consolidating the Customer Id and send the array of invoices",
			"            mapContext.write(mapValue.values[0], mapValue.values[1]);",
			"        }",
			"",
			"        function reduce(reduceContext) {",
			"            var customerId = reduceContext.key;",
			"            var invoices = reduceContext.values;",
			"",
			"            for (var i = 0; i < invoices.length; i++) {",
			"                log.debug('Invoice Id', invoices[i]);",
			"            }",
			"        }",
			"",
			"        function summarize(summaryContext) {",
			"            ",
			"        }",
			"",
			"        return {",
			"            getInputData: getInputData,",
			"            map: map,",
			"            reduce: reduce,",
			"            summarize: summarize",
			"        };",
			"    }",
			");"
		],
		"description": "NetSuite SuiteScript Type Map/Reduce in SS2.0"
	},
	"SuiteScript Mass Update 2.1": {
		"prefix": "massupdate2_1",
		"body": [
			"/**",
			" *@NApiVersion 2.1",
			" *@NScriptType MassUpdateScript",
			" */",
			"/* jshint esversion: 9*/",
			"define(['N/record'], ",
			"    (record) => {",
			"        const each = (params) => {",
			"            // Set the probability to 61%",
			"            let recOpportunity = record.load({",
			"                type: params.type,",
			"                id: params.id",
			"            });",
			"            recOpportunity.setValue({",
			"                fieldId: 'probability',",
			"                value: 61",
			"            })",
			"            .save();",
			"        };",
			"",
			"        return {",
			"            each: each",
			"        };",
			"    }",
			");"
		],
		"description": "NetSuite SuiteScript Type Mass Update in SS2.1"
	},
	"SuiteScript Mass Update 2.0": {
		"prefix": "massupdate2_0",
		"body": [
			"/**",
			" *@NApiVersion 2.0",
			" *@NScriptType MassUpdateScript",
			" */",
			"/* jshint esversion: 5*/",
			"define(['N/record'], ",
			"    function (record) {",
			"        function each(params) {",
			"            // Set the probability to 61%",
			"            var recOpportunity = record.load({",
			"                type: params.type,",
			"                id: params.id",
			"            });",
			"            recOpportunity.setValue({",
			"                fieldId: 'probability',",
			"                value: 61",
			"            })",
			"            .save();",
			"        }",
			"",
			"        return {",
			"            each: each",
			"        };",
			"    }",
			");"
		],
		"description": "NetSuite SuiteScript Type Mass Update in SS2.0"
	},
	"SuiteScript Restlet 2.1": {
		"prefix": "restlet2_1",
		"body": [
			"/**",
			" *@NApiVersion 2.1",
			" *@NScriptType Restlet",
			" */",
			"/* jshint esversion: 9 */",
			"define(['N/record', 'N/error'],",
			"    (record, error) => {",
			"        const doValidation = (args, argNames, methodName) => {",
			"            for (let i = 0; i < args.length; i++) {",
			"                if (!args[i] && args[i] !== 0) {",
			"                    throw error.create({",
			"                        name: 'MISSING_REQ_ARG',",
			"                        message: `Missing a required argument: [ \\${argNames[i]} ] for method: \\${methodName}`",
			"                    });",
			"                }",
			"            }",
			"        };",
			"        // Get a standard NetSuite record",
			"        const get = requestParams => {",
			"            doValidation([requestParams.recordtype, requestParams.id], ['recordtype', 'id'], 'GET');",
			"            return JSON.stringify(",
			"                record.load({",
			"                type: requestParams.recordtype,",
			"                id: requestParams.id",
			"            }));",
			"        };",
			"        // Delete a standard NetSuite record",
			"        const _delete = requestParams => {",
			"            doValidation([requestParams.recordtype, requestParams.id], ['recordtype', 'id'], 'DELETE');",
			"            record.delete({",
			"                type: requestParams.recordtype,",
			"                id: requestParams.id",
			"            });",
			"            return String(requestParams.id);",
			"        };",
			"        // Create a NetSuite record from request params",
			"        const post = requestParams => {",
			"            doValidation([requestParams.recordtype], ['recordtype'], 'POST');",
			"            var rec = record.create({",
			"                type: requestParams.recordtype",
			"            });",
			"            for (let fldName in requestParams) {",
			"                if (requestParams.hasOwnProperty(fldName)) {",
			"                    if (fldName !== 'recordtype') {",
			"                        rec.setValue({",
			"                            fieldId: fldName,",
			"                            value: requestParams[fldName],",
			"                            ignoreFieldChange: false",
			"                        });",
			"                        rec.setValue(fldName, );",
			"                    }",
			"                }",
			"            }",
			"            var recordId = rec.save();",
			"            return String(recordId);",
			"        };",
			"        // Upsert a NetSuite record from request param",
			"        const put = requestParams => {",
			"            doValidation([requestParams.recordtype, requestParams.id], ['recordtype', 'id'], 'PUT');",
			"            var rec = record.load({",
			"                type: requestParams.recordtype,",
			"                id: requestParams.id",
			"            });",
			"            for (var fldName in requestParams) {",
			"                if (requestParams.hasOwnProperty(fldName)) {",
			"                    if (fldName !== 'recordtype' && fldName !== 'id') {",
			"                        rec.setValue({",
			"                            fieldId: fldName,",
			"                            value: requestParams[fldName],",
			"                            ignoreFieldChange: false",
			"                        });",
			"                    }",
			"                }",
			"            }",
			"            rec.save();",
			"            return JSON.stringify(rec);",
			"        };",
			"        return {",
			"            get: get,",
			"            delete: _delete,",
			"            post: post,",
			"            put: put",
			"        };",
			"    }",
			");"
		],
		"description": "NetSuite SuiteScript Type Restlet in SS2.1"
	},
	"SuiteScript Scheduled 2.1": {
		"prefix": "scheduled2_1",
		"body": [
			"/**",
			" *@NApiVersion 2.1",
			" *@NScriptType ScheduledScript",
			" */",
			"/*jshint esversion: 9*/",
			"define(['N/query', 'N/record'],",
			"    (query, record) => {",
			"        const execute = context => {",
			"            let customers = query.runSuiteQL({",
			"                query: `SELECT id AS custid",
			"                FROM customer",
			"                WHERE NVL(custentity_isprocessed, 'F') = 'F'",
			"                FETCH NEXT 1999 ROWS ONLY`",
			"            }).asMappedResults();",
			"",
			"            customers.forEach(element => {",
			"                try {",
			"                    record.submitFields({",
			"                        type: record.Type.CUSTOMER,",
			"                        id: element.custid,",
			"                        values: {",
			"                            custentity_isprocessed: true",
			"                        }",
			"                    });",
			"                } catch (e) {",
			"                    log.error(e);",
			"                }",
			"            });",
			"        };",
			"",
			"        return {",
			"            execute: execute",
			"        };",
			"    }",
			");"
		],
		"description": "NetSuite SuiteScript Type Scheduled in SS2.1"
	},
	"SuiteScript Scheduled 2.0": {
		"prefix": "scheduled2_0",
		"body": [
		  "/**",
		  " *@NApiVersion 2.0",
		  " *@NScriptType ScheduledScript",
		  " */",
		  "/*jshint esversion: 5*/",
		  "define(['N/query', 'N/record'],",
		  "    function (query, record) {",
		  "        function execute (context) {",
		  "            var customers = query.runSuiteQL({",
		  "                query: \"SELECT id AS custid\\n\"+",
		  "                \"FROM customer\\n\"+",
		  "                \"WHERE NVL(custentity_isprocessed, 'F') = 'F'\\n\"+",
		  "                \"FETCH NEXT 1999 ROWS ONLY\"",
		  "            }).asMappedResults();",
		  "",
		  "            for (var i = 0; i < customers.length; i++) {",
		  "                try {",
		  "                    record.submitFields({",
		  "                        type: record.Type.CUSTOMER,",
		  "                        id: customers[i].custid,",
		  "                        values: {",
		  "                            custentity_isprocessed: true",
		  "                        }",
		  "                    });",
		  "                } catch (e) {",
		  "                    log.error(e);",
		  "                }",
		  "            }",
		  "        }",
		  "",
		  "        return {",
		  "            execute: execute",
		  "        };",
		  "    }",
		  ");"
		],
		"description": "NetSuite SuiteScript Type Scheduled in SS2.0"
	},
	"SuiteScript Client 2.1": {
		"prefix": "client2_1",
		"body": [
			"/**",
			" *@NApiVersion 2.1",
			" *@NScriptType ClientScript",
			" */",
			"/*jshint esversion: 9*/",
			"define(['N/error'],",
			"    (error) => {",
			"        const pageInit = context => {",
			"            if (context.mode !== 'create')",
			"                return;",
			"            let currentRecord = context.currentRecord;",
			"            currentRecord.setValue({",
			"                fieldId: 'entity',",
			"                value: 107",
			"            });",
			"        };",
			"        const saveRecord = context => {",
			"            let currentRecord = context.currentRecord;",
			"            if (!currentRecord.getValue({",
			"                    fieldId: 'entity'",
			"                }) || currentRecord.getLineCount({",
			"                    sublistId: 'item'",
			"                }) < 1)",
			"                throw error.create({",
			"                    name: 'MISSING_REQ_ARG',",
			"                    message: 'Please enter all the necessary fields on the salesorder before saving'",
			"                });",
			"            return true;",
			"        };",
			"        const validateField = context => {",
			"            var currentRecord = context.currentRecord;",
			"            var sublistName = context.sublistId;",
			"            var sublistFieldName = context.fieldId;",
			"            var line = context.line;",
			"            if (sublistName === 'item') {",
			"                if (sublistFieldName === 'quantity') {",
			"                    if (currentRecord.getCurrentSublistValue({",
			"                            sublistId: sublistName,",
			"                            fieldId: sublistFieldName",
			"                        }) < 3)",
			"                        currentRecord.setValue({",
			"                            fieldId: 'otherrefnum',",
			"                            value: 'Quantity is less than 3'",
			"                        });",
			"                    else",
			"                        currentRecord.setValue({",
			"                            fieldId: 'otherrefnum',",
			"                            value: 'Quantity accepted'",
			"                        });",
			"                }",
			"            }",
			"            return true;",
			"        };",
			"        const fieldChanged = context => {",
			"            var currentRecord = context.currentRecord;",
			"            var sublistName = context.sublistId;",
			"            var sublistFieldName = context.fieldId;",
			"            var line = context.line;",
			"            if (sublistName === 'item' && sublistFieldName === 'item')",
			"                currentRecord.setValue({",
			"                    fieldId: 'memo',",
			"                    value: 'Item: ' + currentRecord.getCurrentSublistValue({",
			"                        sublistId: 'item',",
			"                        fieldId: 'item'",
			"                    }) + ' is selected'",
			"                });",
			"        };",
			"        const postSourcing = context => {",
			"            var currentRecord = context.currentRecord;",
			"            var sublistName = context.sublistId;",
			"            var sublistFieldName = context.fieldId;",
			"            var line = context.line;",
			"            if (sublistName === 'item' && sublistFieldName === 'item')",
			"                if (currentRecord.getCurrentSublistValue({",
			"                        sublistId: sublistName,",
			"                        fieldId: sublistFieldName",
			"                    }) === '39')",
			"                    if (currentRecord.getCurrentSublistValue({",
			"                            sublistId: sublistName,",
			"                            fieldId: 'pricelevels'",
			"                        }) !== '1-1')",
			"                        currentRecord.setCurrentSublistValue({",
			"                            sublistId: sublistName,",
			"                            fieldId: 'pricelevels',",
			"                            value: '1-1'",
			"                        });",
			"        };",
			"        const lineInit = context => {",
			"            var currentRecord = context.currentRecord;",
			"            var sublistName = context.sublistId;",
			"            if (sublistName === 'partners')",
			"                currentRecord.setCurrentSublistValue({",
			"                    sublistId: sublistName,",
			"                    fieldId: 'partner',",
			"                    value: '55'",
			"                });",
			"        };",
			"        const validateDelete = context => {",
			"            var currentRecord = context.currentRecord;",
			"            var sublistName = context.sublistId;",
			"            if (sublistName === 'partners')",
			"                if (currentRecord.getCurrentSublistValue({",
			"                        sublistId: sublistName,",
			"                        fieldId: 'partner'",
			"                    }) === '55')",
			"                    currentRecord.setValue({",
			"                        fieldId: 'memo',",
			"                        value: 'Removing partner sublist'",
			"                    });",
			"            return true;",
			"        };",
			"        const validateInsert = context => {",
			"            var currentRecord = context.currentRecord;",
			"            var sublistName = context.sublistId;",
			"            if (sublistName === 'partners')",
			"                if (currentRecord.getCurrentSublistValue({",
			"                        sublistId: sublistName,",
			"                        fieldId: 'contribution'",
			"                    }) !== '100.0%')",
			"                    currentRecord.setCurrentSublistValue({",
			"                        sublistId: sublistName,",
			"                        fieldId: 'contribution',",
			"                        value: '100.0%'",
			"                    });",
			"            return true;",
			"        };",
			"        const validateLine = context => {",
			"            var currentRecord = context.currentRecord;",
			"            var sublistName = context.sublistId;",
			"            if (sublistName === 'partners')",
			"                if (currentRecord.getCurrentSublistValue({",
			"                        sublistId: sublistName,",
			"                        fieldId: 'contribution'",
			"                    }) !== '100.0%')",
			"                    currentRecord.setCurrentSublistValue({",
			"                        sublistId: sublistName,",
			"                        fieldId: 'contribution',",
			"                        value: '100.0%'",
			"                    });",
			"            return true;",
			"        };",
			"        const sublistChanged = context => {",
			"            var currentRecord = context.currentRecord;",
			"            var sublistName = context.sublistId;",
			"            var op = context.operation;",
			"            if (sublistName === 'item')",
			"                currentRecord.setValue({",
			"                    fieldId: 'memo',",
			"                    value: 'Total has changed to ' + currentRecord.getValue({",
			"                        fieldId: 'total'",
			"                    }) + ' with operation: ' + op",
			"                });",
			"        };",
			"        return {",
			"            pageInit: pageInit,",
			"            fieldChanged: fieldChanged,",
			"            postSourcing: postSourcing,",
			"            sublistChanged: sublistChanged,",
			"            lineInit: lineInit,",
			"            validateField: validateField,",
			"            validateLine: validateLine,",
			"            validateInsert: validateInsert,",
			"            validateDelete: validateDelete,",
			"            saveRecord: saveRecord",
			"        };",
			"    });"
		],
		"description": "NetSuite SuiteScript Type Client Script in SS2.1"
	},
	"SuiteScript Record.load()": {
		"prefix": "record.load",
		"body": [
			"var rec = record.load({",
			"    type: record.Type.${1|ACCOUNT,ACCOUNTING_BOOK,ACCOUNTING_CONTEXT,ACCOUNTING_PERIOD,ADV_INTER_COMPANY_JOURNAL_ENTRY,ALLOCATION_SCHEDULE,AMORTIZATION_SCHEDULE,AMORTIZATION_TEMPLATE,AS_CHARGED_PROJECT_REVENUE_RULE,ASSEMBLY_BUILD,ASSEMBLY_ITEM,ASSEMBLY_UNBUILD,BALANCE_TRX_BY_SEGMENTS,BILLING_ACCOUNT,BILLING_CLASS,BILLING_RATE_CARD,BILLING_REVENUE_EVENT,BILLING_SCHEDULE,BIN,BIN_TRANSFER,BIN_WORKSHEET,BLANKET_PURCHASE_ORDER,BOM,BOM_REVISION,BONUS,BONUS_TYPE,BUDGET_EXCHANGE_RATE,BULK_OWNERSHIP_TRANSFER,BUNDLE_INSTALLATION_SCRIPT,CALENDAR_EVENT,CAMPAIGN,CAMPAIGN_RESPONSE,CAMPAIGN_TEMPLATE,CASH_REFUND,CASH_SALE,CHARGE,CHARGE_RULE,CHECK,CLASSIFICATION,CLIENT_SCRIPT,CMS_CONTENT,CMS_CONTENT_TYPE,CMS_PAGE,COMMERCE_CATEGORY,COMPETITOR,CONSOLIDATED_EXCHANGE_RATE,CONTACT,CONTACT_CATEGORY,CONTACT_ROLE,COST_CATEGORY,COUPON_CODE,CREDIT_CARD_CHARGE,CREDIT_CARD_REFUND,CREDIT_MEMO,CURRENCY,CUSTOM_PURCHASE,CUSTOMER,CUSTOMER_CATEGORY,CUSTOMER_DEPOSIT,CUSTOMER_MESSAGE,CUSTOMER_PAYMENT,CUSTOMER_PAYMENT_AUTHORIZATION,CUSTOM_RECORD,CUSTOMER_REFUND,CUSTOMER_STATUS,CUSTOMER_SUBSIDIARY_RELATIONSHIP,CUSTOM_TRANSACTION,DEPARTMENT,DEPOSIT,DEPOSIT_APPLICATION,DESCRIPTION_ITEM,DISCOUNT_ITEM,DOWNLOAD_ITEM,EMAIL_TEMPLATE,EMPLOYEE,EMPLOYEE_CHANGE_REQUEST,EMPLOYEE_CHANGE_TYPE,ENTITY_ACCOUNT_MAPPING,ESTIMATE,EXPENSE_AMORTIZATION_EVENT,EXPENSE_CATEGORY,EXPENSE_PLAN,EXPENSE_REPORT,FAIR_VALUE_PRICE,FINANCIAL_INSTITUTION,FIXED_AMOUNT_PROJECT_REVENUE_RULE,FOLDER,FULFILLMENT_REQUEST,GENERAL_TOKEN,GENERIC_RESOURCE,GIFT_CERTIFICATE,GIFT_CERTIFICATE_ITEM,GLOBAL_ACCOUNT_MAPPING,GLOBAL_INVENTORY_RELATIONSHIP,GL_NUMBERING_SEQUENCE,GOAL,INBOUND_SHIPMENT,INTERCOMP_ALLOCATION_SCHEDULE,INTER_COMPANY_JOURNAL_ENTRY,INTER_COMPANY_TRANSFER_ORDER,INVENTORY_ADJUSTMENT,INVENTORY_COST_REVALUATION,INVENTORY_COUNT,INVENTORY_DETAIL,INVENTORY_ITEM,INVENTORY_NUMBER,INVENTORY_STATUS,INVENTORY_STATUS_CHANGE,INVENTORY_TRANSFER,INVOICE,ISSUE,ISSUE_PRODUCT,ISSUE_PRODUCT_VERSION,ITEM_ACCOUNT_MAPPING,ITEM_COLLECTION,ITEM_COLLECTION_ITEM_MAP,ITEM_DEMAND_PLAN,ITEM_FULFILLMENT,ITEM_GROUP,ITEM_LOCATION_CONFIGURATION,ITEM_PROCESS_FAMILY,ITEM_PROCESS_GROUP,ITEM_RECEIPT,ITEM_REVISION,ITEM_SUPPLY_PLAN,JOB,JOB_STATUS,JOB_TYPE,JOURNAL_ENTRY,KIT_ITEM,LABOR_ BASED_PROJECT_REVENUE_RULE,LEAD,LOCATION,LOT_NUMBERED_ASSEMBLY_ITEM,LOT_NUMBERED_INVENTORY_ITEM,MANUFACTURING_COST_TEMPLATE,MANUFACTURING_OPERATION_TASK,MANUFACTURING_ROUTING,MAP_REDUCE_SCRIPT,MARKUP_ITEM,MASSUPDATE_SCRIPT,MEM_DOC,MERCHANDISE_HIERARCHY_LEVEL,MERCHANDISE_HIERARCHY_NODE,MERCHANDISE_HIERARCHY_VERSION,MESSAGE,MFG_PLANNED_TIME,NEXUS,NON_INVENTORY_ITEM,NOTE,NOTE_TYPE,OPPORTUNITY,ORDER_SCHEDULE,OTHER_CHARGE_ITEM,OTHER_NAME,OTHER_NAME_CATEGORY,PARTNER,PARTNER_CATEGORY,PARTNER_COMMISSION_PLAN,PAYCHECK,PAYCHECK_JOURNAL,PAYMENT_CARD,PAYMENT_CARD_TOKEN,PAYMENT_ITEM,PAYMENT_METHOD,PAYROLL_ITEM,PCT_COMPLETE_PROJECT_REVENUE_RULE,PERFORMANCE_METRIC,PERFORMANCE_REVIEW,PERFORMANCE_REVIEW_SCHEDULE,PERIOD_END_JOURNAL,PHONE_CALL,PICK_STRATEGY,PICK_TASK,PORTLET,PRICE_BOOK,PRICE_LEVEL,PRICE_PLAN,PRICING_GROUP,PROJECT_EXPENSE_TYPE,PROJECT_TASK,PROJECT_TEMPLATE,PROMOTION_CODE,PROSPECT,PURCHASE_CONTRACT,PURCHASE_ORDER,PURCHASE_REQUISITION,REALLOCATE_ITEM,RECEIVE_INBOUND_SHIPMENT,RESOURCE_ALLOCATION,RESTLET,RETURN_AUTHORIZATION,REVENUE_ARRANGEMENT,REVENUE_COMMITMENT,REVENUE_COMMITMENT_REVERSAL,REVENUE_PLAN,REV_REC_SCHEDULE,REV_REC_TEMPLATE,SALES_ORDER,SALES_ROLE,SALES_TAX_ITEM,SCHEDULED_SCRIPT,SCHEDULED_SCRIPT_INSTANCE,SCRIPT_DEPLOYMENT,SERIALIZED_ASSEMBLY_ITEM,SERIALIZED_INVENTORY_ITEM,SERVICE_ITEM,SHIP_ITEM,SOLUTION,STATISTICAL_JOURNAL_ENTRY,STORE_PICKUP_FULFILLMENT,SUBSCRIPTION,SUBSCRIPTION_CHANGE_ORDER,SUBSCRIPTION_LINE,SUBSCRIPTION_PLAN,SUBSIDIARY,SUBSIDIARY_SETTINGS,SUBTOTAL_ITEM,SUITELET,SUPPLY_CHAIN_SNAPSHOT,SUPPLY_CHAIN_SNAPSHOT_SIMULATION,SUPPORT_CASE,TASK,TAX_ACCT,TAX_GROUP,TAX_PERIOD,TAX_TYPE,TERM,TIME_BILL,TIME_ENTRY,TIME_OFF_CHANGE,TIME_OFF_PLAN,TIME_OFF_REQUEST,TIME_OFF_RULE,TIME_OFF_TYPE,TIME_SHEET,TOPIC,TRANSFER_ORDER,UNITS_TYPE,UNLOCKED_TIME_PERIOD,USAGE,USEREVENT_SCRIPT,VENDOR,VENDOR_BILL,VENDOR_CATEGORY,VENDOR_CREDIT,VENDOR_PAYMENT,VENDOR_PREPAYMENT,VENDOR_PREPAYMENT_APPLICATION,VENDOR_RETURN_AUTHORIZATION,VENDOR_SUBSIDIARY_RELATIONSHIP,WAVE,WBS,WEBSITE,WORKFLOW_ACTION_SCRIPT,WORK_ORDER,WORK_ORDER_CLOSE,WORK_ORDER_COMPLETION,WORK_ORDER_ISSUE,WORKPLACE,ZONE|},",
			"    id: ${2:0},",
			"    isDynamic: ${3|false,true|}",
			"});"
		],
		"description": "NetSuite Record.load()"
	},
	"SuiteScript Record.copy()": {
		"prefix": "record.copy",
		"body": [
			"var rec = record.copy({",
			"    type: record.Type.${1|ACCOUNT,ACCOUNTING_BOOK,ACCOUNTING_CONTEXT,ACCOUNTING_PERIOD,ADV_INTER_COMPANY_JOURNAL_ENTRY,ALLOCATION_SCHEDULE,AMORTIZATION_SCHEDULE,AMORTIZATION_TEMPLATE,AS_CHARGED_PROJECT_REVENUE_RULE,ASSEMBLY_BUILD,ASSEMBLY_ITEM,ASSEMBLY_UNBUILD,BALANCE_TRX_BY_SEGMENTS,BILLING_ACCOUNT,BILLING_CLASS,BILLING_RATE_CARD,BILLING_REVENUE_EVENT,BILLING_SCHEDULE,BIN,BIN_TRANSFER,BIN_WORKSHEET,BLANKET_PURCHASE_ORDER,BOM,BOM_REVISION,BONUS,BONUS_TYPE,BUDGET_EXCHANGE_RATE,BULK_OWNERSHIP_TRANSFER,BUNDLE_INSTALLATION_SCRIPT,CALENDAR_EVENT,CAMPAIGN,CAMPAIGN_RESPONSE,CAMPAIGN_TEMPLATE,CASH_REFUND,CASH_SALE,CHARGE,CHARGE_RULE,CHECK,CLASSIFICATION,CLIENT_SCRIPT,CMS_CONTENT,CMS_CONTENT_TYPE,CMS_PAGE,COMMERCE_CATEGORY,COMPETITOR,CONSOLIDATED_EXCHANGE_RATE,CONTACT,CONTACT_CATEGORY,CONTACT_ROLE,COST_CATEGORY,COUPON_CODE,CREDIT_CARD_CHARGE,CREDIT_CARD_REFUND,CREDIT_MEMO,CURRENCY,CUSTOM_PURCHASE,CUSTOMER,CUSTOMER_CATEGORY,CUSTOMER_DEPOSIT,CUSTOMER_MESSAGE,CUSTOMER_PAYMENT,CUSTOMER_PAYMENT_AUTHORIZATION,CUSTOM_RECORD,CUSTOMER_REFUND,CUSTOMER_STATUS,CUSTOMER_SUBSIDIARY_RELATIONSHIP,CUSTOM_TRANSACTION,DEPARTMENT,DEPOSIT,DEPOSIT_APPLICATION,DESCRIPTION_ITEM,DISCOUNT_ITEM,DOWNLOAD_ITEM,EMAIL_TEMPLATE,EMPLOYEE,EMPLOYEE_CHANGE_REQUEST,EMPLOYEE_CHANGE_TYPE,ENTITY_ACCOUNT_MAPPING,ESTIMATE,EXPENSE_AMORTIZATION_EVENT,EXPENSE_CATEGORY,EXPENSE_PLAN,EXPENSE_REPORT,FAIR_VALUE_PRICE,FINANCIAL_INSTITUTION,FIXED_AMOUNT_PROJECT_REVENUE_RULE,FOLDER,FULFILLMENT_REQUEST,GENERAL_TOKEN,GENERIC_RESOURCE,GIFT_CERTIFICATE,GIFT_CERTIFICATE_ITEM,GLOBAL_ACCOUNT_MAPPING,GLOBAL_INVENTORY_RELATIONSHIP,GL_NUMBERING_SEQUENCE,GOAL,INBOUND_SHIPMENT,INTERCOMP_ALLOCATION_SCHEDULE,INTER_COMPANY_JOURNAL_ENTRY,INTER_COMPANY_TRANSFER_ORDER,INVENTORY_ADJUSTMENT,INVENTORY_COST_REVALUATION,INVENTORY_COUNT,INVENTORY_DETAIL,INVENTORY_ITEM,INVENTORY_NUMBER,INVENTORY_STATUS,INVENTORY_STATUS_CHANGE,INVENTORY_TRANSFER,INVOICE,ISSUE,ISSUE_PRODUCT,ISSUE_PRODUCT_VERSION,ITEM_ACCOUNT_MAPPING,ITEM_COLLECTION,ITEM_COLLECTION_ITEM_MAP,ITEM_DEMAND_PLAN,ITEM_FULFILLMENT,ITEM_GROUP,ITEM_LOCATION_CONFIGURATION,ITEM_PROCESS_FAMILY,ITEM_PROCESS_GROUP,ITEM_RECEIPT,ITEM_REVISION,ITEM_SUPPLY_PLAN,JOB,JOB_STATUS,JOB_TYPE,JOURNAL_ENTRY,KIT_ITEM,LABOR_ BASED_PROJECT_REVENUE_RULE,LEAD,LOCATION,LOT_NUMBERED_ASSEMBLY_ITEM,LOT_NUMBERED_INVENTORY_ITEM,MANUFACTURING_COST_TEMPLATE,MANUFACTURING_OPERATION_TASK,MANUFACTURING_ROUTING,MAP_REDUCE_SCRIPT,MARKUP_ITEM,MASSUPDATE_SCRIPT,MEM_DOC,MERCHANDISE_HIERARCHY_LEVEL,MERCHANDISE_HIERARCHY_NODE,MERCHANDISE_HIERARCHY_VERSION,MESSAGE,MFG_PLANNED_TIME,NEXUS,NON_INVENTORY_ITEM,NOTE,NOTE_TYPE,OPPORTUNITY,ORDER_SCHEDULE,OTHER_CHARGE_ITEM,OTHER_NAME,OTHER_NAME_CATEGORY,PARTNER,PARTNER_CATEGORY,PARTNER_COMMISSION_PLAN,PAYCHECK,PAYCHECK_JOURNAL,PAYMENT_CARD,PAYMENT_CARD_TOKEN,PAYMENT_ITEM,PAYMENT_METHOD,PAYROLL_ITEM,PCT_COMPLETE_PROJECT_REVENUE_RULE,PERFORMANCE_METRIC,PERFORMANCE_REVIEW,PERFORMANCE_REVIEW_SCHEDULE,PERIOD_END_JOURNAL,PHONE_CALL,PICK_STRATEGY,PICK_TASK,PORTLET,PRICE_BOOK,PRICE_LEVEL,PRICE_PLAN,PRICING_GROUP,PROJECT_EXPENSE_TYPE,PROJECT_TASK,PROJECT_TEMPLATE,PROMOTION_CODE,PROSPECT,PURCHASE_CONTRACT,PURCHASE_ORDER,PURCHASE_REQUISITION,REALLOCATE_ITEM,RECEIVE_INBOUND_SHIPMENT,RESOURCE_ALLOCATION,RESTLET,RETURN_AUTHORIZATION,REVENUE_ARRANGEMENT,REVENUE_COMMITMENT,REVENUE_COMMITMENT_REVERSAL,REVENUE_PLAN,REV_REC_SCHEDULE,REV_REC_TEMPLATE,SALES_ORDER,SALES_ROLE,SALES_TAX_ITEM,SCHEDULED_SCRIPT,SCHEDULED_SCRIPT_INSTANCE,SCRIPT_DEPLOYMENT,SERIALIZED_ASSEMBLY_ITEM,SERIALIZED_INVENTORY_ITEM,SERVICE_ITEM,SHIP_ITEM,SOLUTION,STATISTICAL_JOURNAL_ENTRY,STORE_PICKUP_FULFILLMENT,SUBSCRIPTION,SUBSCRIPTION_CHANGE_ORDER,SUBSCRIPTION_LINE,SUBSCRIPTION_PLAN,SUBSIDIARY,SUBSIDIARY_SETTINGS,SUBTOTAL_ITEM,SUITELET,SUPPLY_CHAIN_SNAPSHOT,SUPPLY_CHAIN_SNAPSHOT_SIMULATION,SUPPORT_CASE,TASK,TAX_ACCT,TAX_GROUP,TAX_PERIOD,TAX_TYPE,TERM,TIME_BILL,TIME_ENTRY,TIME_OFF_CHANGE,TIME_OFF_PLAN,TIME_OFF_REQUEST,TIME_OFF_RULE,TIME_OFF_TYPE,TIME_SHEET,TOPIC,TRANSFER_ORDER,UNITS_TYPE,UNLOCKED_TIME_PERIOD,USAGE,USEREVENT_SCRIPT,VENDOR,VENDOR_BILL,VENDOR_CATEGORY,VENDOR_CREDIT,VENDOR_PAYMENT,VENDOR_PREPAYMENT,VENDOR_PREPAYMENT_APPLICATION,VENDOR_RETURN_AUTHORIZATION,VENDOR_SUBSIDIARY_RELATIONSHIP,WAVE,WBS,WEBSITE,WORKFLOW_ACTION_SCRIPT,WORK_ORDER,WORK_ORDER_CLOSE,WORK_ORDER_COMPLETION,WORK_ORDER_ISSUE,WORKPLACE,ZONE|},",
			"    id: ${2|true,false|},",
			"    isDynamic: ${3|false,true|},",
			"    defaultValues: {",
			"        $4",
			"    }",
			"});"
		],
		"description": "NetSuite Record.copy()"
	},
	"SuiteScript Record.create()": {
		"prefix": "record.create",
		"body": [
			"var rec = record.create({",
			"    type: record.Type.${1|ACCOUNT,ACCOUNTING_BOOK,ACCOUNTING_CONTEXT,ACCOUNTING_PERIOD,ADV_INTER_COMPANY_JOURNAL_ENTRY,ALLOCATION_SCHEDULE,AMORTIZATION_SCHEDULE,AMORTIZATION_TEMPLATE,AS_CHARGED_PROJECT_REVENUE_RULE,ASSEMBLY_BUILD,ASSEMBLY_ITEM,ASSEMBLY_UNBUILD,BALANCE_TRX_BY_SEGMENTS,BILLING_ACCOUNT,BILLING_CLASS,BILLING_RATE_CARD,BILLING_REVENUE_EVENT,BILLING_SCHEDULE,BIN,BIN_TRANSFER,BIN_WORKSHEET,BLANKET_PURCHASE_ORDER,BOM,BOM_REVISION,BONUS,BONUS_TYPE,BUDGET_EXCHANGE_RATE,BULK_OWNERSHIP_TRANSFER,BUNDLE_INSTALLATION_SCRIPT,CALENDAR_EVENT,CAMPAIGN,CAMPAIGN_RESPONSE,CAMPAIGN_TEMPLATE,CASH_REFUND,CASH_SALE,CHARGE,CHARGE_RULE,CHECK,CLASSIFICATION,CLIENT_SCRIPT,CMS_CONTENT,CMS_CONTENT_TYPE,CMS_PAGE,COMMERCE_CATEGORY,COMPETITOR,CONSOLIDATED_EXCHANGE_RATE,CONTACT,CONTACT_CATEGORY,CONTACT_ROLE,COST_CATEGORY,COUPON_CODE,CREDIT_CARD_CHARGE,CREDIT_CARD_REFUND,CREDIT_MEMO,CURRENCY,CUSTOM_PURCHASE,CUSTOMER,CUSTOMER_CATEGORY,CUSTOMER_DEPOSIT,CUSTOMER_MESSAGE,CUSTOMER_PAYMENT,CUSTOMER_PAYMENT_AUTHORIZATION,CUSTOM_RECORD,CUSTOMER_REFUND,CUSTOMER_STATUS,CUSTOMER_SUBSIDIARY_RELATIONSHIP,CUSTOM_TRANSACTION,DEPARTMENT,DEPOSIT,DEPOSIT_APPLICATION,DESCRIPTION_ITEM,DISCOUNT_ITEM,DOWNLOAD_ITEM,EMAIL_TEMPLATE,EMPLOYEE,EMPLOYEE_CHANGE_REQUEST,EMPLOYEE_CHANGE_TYPE,ENTITY_ACCOUNT_MAPPING,ESTIMATE,EXPENSE_AMORTIZATION_EVENT,EXPENSE_CATEGORY,EXPENSE_PLAN,EXPENSE_REPORT,FAIR_VALUE_PRICE,FINANCIAL_INSTITUTION,FIXED_AMOUNT_PROJECT_REVENUE_RULE,FOLDER,FULFILLMENT_REQUEST,GENERAL_TOKEN,GENERIC_RESOURCE,GIFT_CERTIFICATE,GIFT_CERTIFICATE_ITEM,GLOBAL_ACCOUNT_MAPPING,GLOBAL_INVENTORY_RELATIONSHIP,GL_NUMBERING_SEQUENCE,GOAL,INBOUND_SHIPMENT,INTERCOMP_ALLOCATION_SCHEDULE,INTER_COMPANY_JOURNAL_ENTRY,INTER_COMPANY_TRANSFER_ORDER,INVENTORY_ADJUSTMENT,INVENTORY_COST_REVALUATION,INVENTORY_COUNT,INVENTORY_DETAIL,INVENTORY_ITEM,INVENTORY_NUMBER,INVENTORY_STATUS,INVENTORY_STATUS_CHANGE,INVENTORY_TRANSFER,INVOICE,ISSUE,ISSUE_PRODUCT,ISSUE_PRODUCT_VERSION,ITEM_ACCOUNT_MAPPING,ITEM_COLLECTION,ITEM_COLLECTION_ITEM_MAP,ITEM_DEMAND_PLAN,ITEM_FULFILLMENT,ITEM_GROUP,ITEM_LOCATION_CONFIGURATION,ITEM_PROCESS_FAMILY,ITEM_PROCESS_GROUP,ITEM_RECEIPT,ITEM_REVISION,ITEM_SUPPLY_PLAN,JOB,JOB_STATUS,JOB_TYPE,JOURNAL_ENTRY,KIT_ITEM,LABOR_ BASED_PROJECT_REVENUE_RULE,LEAD,LOCATION,LOT_NUMBERED_ASSEMBLY_ITEM,LOT_NUMBERED_INVENTORY_ITEM,MANUFACTURING_COST_TEMPLATE,MANUFACTURING_OPERATION_TASK,MANUFACTURING_ROUTING,MAP_REDUCE_SCRIPT,MARKUP_ITEM,MASSUPDATE_SCRIPT,MEM_DOC,MERCHANDISE_HIERARCHY_LEVEL,MERCHANDISE_HIERARCHY_NODE,MERCHANDISE_HIERARCHY_VERSION,MESSAGE,MFG_PLANNED_TIME,NEXUS,NON_INVENTORY_ITEM,NOTE,NOTE_TYPE,OPPORTUNITY,ORDER_SCHEDULE,OTHER_CHARGE_ITEM,OTHER_NAME,OTHER_NAME_CATEGORY,PARTNER,PARTNER_CATEGORY,PARTNER_COMMISSION_PLAN,PAYCHECK,PAYCHECK_JOURNAL,PAYMENT_CARD,PAYMENT_CARD_TOKEN,PAYMENT_ITEM,PAYMENT_METHOD,PAYROLL_ITEM,PCT_COMPLETE_PROJECT_REVENUE_RULE,PERFORMANCE_METRIC,PERFORMANCE_REVIEW,PERFORMANCE_REVIEW_SCHEDULE,PERIOD_END_JOURNAL,PHONE_CALL,PICK_STRATEGY,PICK_TASK,PORTLET,PRICE_BOOK,PRICE_LEVEL,PRICE_PLAN,PRICING_GROUP,PROJECT_EXPENSE_TYPE,PROJECT_TASK,PROJECT_TEMPLATE,PROMOTION_CODE,PROSPECT,PURCHASE_CONTRACT,PURCHASE_ORDER,PURCHASE_REQUISITION,REALLOCATE_ITEM,RECEIVE_INBOUND_SHIPMENT,RESOURCE_ALLOCATION,RESTLET,RETURN_AUTHORIZATION,REVENUE_ARRANGEMENT,REVENUE_COMMITMENT,REVENUE_COMMITMENT_REVERSAL,REVENUE_PLAN,REV_REC_SCHEDULE,REV_REC_TEMPLATE,SALES_ORDER,SALES_ROLE,SALES_TAX_ITEM,SCHEDULED_SCRIPT,SCHEDULED_SCRIPT_INSTANCE,SCRIPT_DEPLOYMENT,SERIALIZED_ASSEMBLY_ITEM,SERIALIZED_INVENTORY_ITEM,SERVICE_ITEM,SHIP_ITEM,SOLUTION,STATISTICAL_JOURNAL_ENTRY,STORE_PICKUP_FULFILLMENT,SUBSCRIPTION,SUBSCRIPTION_CHANGE_ORDER,SUBSCRIPTION_LINE,SUBSCRIPTION_PLAN,SUBSIDIARY,SUBSIDIARY_SETTINGS,SUBTOTAL_ITEM,SUITELET,SUPPLY_CHAIN_SNAPSHOT,SUPPLY_CHAIN_SNAPSHOT_SIMULATION,SUPPORT_CASE,TASK,TAX_ACCT,TAX_GROUP,TAX_PERIOD,TAX_TYPE,TERM,TIME_BILL,TIME_ENTRY,TIME_OFF_CHANGE,TIME_OFF_PLAN,TIME_OFF_REQUEST,TIME_OFF_RULE,TIME_OFF_TYPE,TIME_SHEET,TOPIC,TRANSFER_ORDER,UNITS_TYPE,UNLOCKED_TIME_PERIOD,USAGE,USEREVENT_SCRIPT,VENDOR,VENDOR_BILL,VENDOR_CATEGORY,VENDOR_CREDIT,VENDOR_PAYMENT,VENDOR_PREPAYMENT,VENDOR_PREPAYMENT_APPLICATION,VENDOR_RETURN_AUTHORIZATION,VENDOR_SUBSIDIARY_RELATIONSHIP,WAVE,WBS,WEBSITE,WORKFLOW_ACTION_SCRIPT,WORK_ORDER,WORK_ORDER_CLOSE,WORK_ORDER_COMPLETION,WORK_ORDER_ISSUE,WORKPLACE,ZONE|},",
			"    isDynamic: ${2|false,true|},",
			"    defaultValues: {",
			"        $3",
			"    }",
			"});"
		],
		"description": "NetSuite Record.create()"
	},
	"SuiteScript Record.delete()": {
		"prefix": "record.delete",
		"body": [
			"var rec = record.delete({",
			"    type: record.Type.${1|ACCOUNT,ACCOUNTING_BOOK,ACCOUNTING_CONTEXT,ACCOUNTING_PERIOD,ADV_INTER_COMPANY_JOURNAL_ENTRY,ALLOCATION_SCHEDULE,AMORTIZATION_SCHEDULE,AMORTIZATION_TEMPLATE,AS_CHARGED_PROJECT_REVENUE_RULE,ASSEMBLY_BUILD,ASSEMBLY_ITEM,ASSEMBLY_UNBUILD,BALANCE_TRX_BY_SEGMENTS,BILLING_ACCOUNT,BILLING_CLASS,BILLING_RATE_CARD,BILLING_REVENUE_EVENT,BILLING_SCHEDULE,BIN,BIN_TRANSFER,BIN_WORKSHEET,BLANKET_PURCHASE_ORDER,BOM,BOM_REVISION,BONUS,BONUS_TYPE,BUDGET_EXCHANGE_RATE,BULK_OWNERSHIP_TRANSFER,BUNDLE_INSTALLATION_SCRIPT,CALENDAR_EVENT,CAMPAIGN,CAMPAIGN_RESPONSE,CAMPAIGN_TEMPLATE,CASH_REFUND,CASH_SALE,CHARGE,CHARGE_RULE,CHECK,CLASSIFICATION,CLIENT_SCRIPT,CMS_CONTENT,CMS_CONTENT_TYPE,CMS_PAGE,COMMERCE_CATEGORY,COMPETITOR,CONSOLIDATED_EXCHANGE_RATE,CONTACT,CONTACT_CATEGORY,CONTACT_ROLE,COST_CATEGORY,COUPON_CODE,CREDIT_CARD_CHARGE,CREDIT_CARD_REFUND,CREDIT_MEMO,CURRENCY,CUSTOM_PURCHASE,CUSTOMER,CUSTOMER_CATEGORY,CUSTOMER_DEPOSIT,CUSTOMER_MESSAGE,CUSTOMER_PAYMENT,CUSTOMER_PAYMENT_AUTHORIZATION,CUSTOM_RECORD,CUSTOMER_REFUND,CUSTOMER_STATUS,CUSTOMER_SUBSIDIARY_RELATIONSHIP,CUSTOM_TRANSACTION,DEPARTMENT,DEPOSIT,DEPOSIT_APPLICATION,DESCRIPTION_ITEM,DISCOUNT_ITEM,DOWNLOAD_ITEM,EMAIL_TEMPLATE,EMPLOYEE,EMPLOYEE_CHANGE_REQUEST,EMPLOYEE_CHANGE_TYPE,ENTITY_ACCOUNT_MAPPING,ESTIMATE,EXPENSE_AMORTIZATION_EVENT,EXPENSE_CATEGORY,EXPENSE_PLAN,EXPENSE_REPORT,FAIR_VALUE_PRICE,FINANCIAL_INSTITUTION,FIXED_AMOUNT_PROJECT_REVENUE_RULE,FOLDER,FULFILLMENT_REQUEST,GENERAL_TOKEN,GENERIC_RESOURCE,GIFT_CERTIFICATE,GIFT_CERTIFICATE_ITEM,GLOBAL_ACCOUNT_MAPPING,GLOBAL_INVENTORY_RELATIONSHIP,GL_NUMBERING_SEQUENCE,GOAL,INBOUND_SHIPMENT,INTERCOMP_ALLOCATION_SCHEDULE,INTER_COMPANY_JOURNAL_ENTRY,INTER_COMPANY_TRANSFER_ORDER,INVENTORY_ADJUSTMENT,INVENTORY_COST_REVALUATION,INVENTORY_COUNT,INVENTORY_DETAIL,INVENTORY_ITEM,INVENTORY_NUMBER,INVENTORY_STATUS,INVENTORY_STATUS_CHANGE,INVENTORY_TRANSFER,INVOICE,ISSUE,ISSUE_PRODUCT,ISSUE_PRODUCT_VERSION,ITEM_ACCOUNT_MAPPING,ITEM_COLLECTION,ITEM_COLLECTION_ITEM_MAP,ITEM_DEMAND_PLAN,ITEM_FULFILLMENT,ITEM_GROUP,ITEM_LOCATION_CONFIGURATION,ITEM_PROCESS_FAMILY,ITEM_PROCESS_GROUP,ITEM_RECEIPT,ITEM_REVISION,ITEM_SUPPLY_PLAN,JOB,JOB_STATUS,JOB_TYPE,JOURNAL_ENTRY,KIT_ITEM,LABOR_ BASED_PROJECT_REVENUE_RULE,LEAD,LOCATION,LOT_NUMBERED_ASSEMBLY_ITEM,LOT_NUMBERED_INVENTORY_ITEM,MANUFACTURING_COST_TEMPLATE,MANUFACTURING_OPERATION_TASK,MANUFACTURING_ROUTING,MAP_REDUCE_SCRIPT,MARKUP_ITEM,MASSUPDATE_SCRIPT,MEM_DOC,MERCHANDISE_HIERARCHY_LEVEL,MERCHANDISE_HIERARCHY_NODE,MERCHANDISE_HIERARCHY_VERSION,MESSAGE,MFG_PLANNED_TIME,NEXUS,NON_INVENTORY_ITEM,NOTE,NOTE_TYPE,OPPORTUNITY,ORDER_SCHEDULE,OTHER_CHARGE_ITEM,OTHER_NAME,OTHER_NAME_CATEGORY,PARTNER,PARTNER_CATEGORY,PARTNER_COMMISSION_PLAN,PAYCHECK,PAYCHECK_JOURNAL,PAYMENT_CARD,PAYMENT_CARD_TOKEN,PAYMENT_ITEM,PAYMENT_METHOD,PAYROLL_ITEM,PCT_COMPLETE_PROJECT_REVENUE_RULE,PERFORMANCE_METRIC,PERFORMANCE_REVIEW,PERFORMANCE_REVIEW_SCHEDULE,PERIOD_END_JOURNAL,PHONE_CALL,PICK_STRATEGY,PICK_TASK,PORTLET,PRICE_BOOK,PRICE_LEVEL,PRICE_PLAN,PRICING_GROUP,PROJECT_EXPENSE_TYPE,PROJECT_TASK,PROJECT_TEMPLATE,PROMOTION_CODE,PROSPECT,PURCHASE_CONTRACT,PURCHASE_ORDER,PURCHASE_REQUISITION,REALLOCATE_ITEM,RECEIVE_INBOUND_SHIPMENT,RESOURCE_ALLOCATION,RESTLET,RETURN_AUTHORIZATION,REVENUE_ARRANGEMENT,REVENUE_COMMITMENT,REVENUE_COMMITMENT_REVERSAL,REVENUE_PLAN,REV_REC_SCHEDULE,REV_REC_TEMPLATE,SALES_ORDER,SALES_ROLE,SALES_TAX_ITEM,SCHEDULED_SCRIPT,SCHEDULED_SCRIPT_INSTANCE,SCRIPT_DEPLOYMENT,SERIALIZED_ASSEMBLY_ITEM,SERIALIZED_INVENTORY_ITEM,SERVICE_ITEM,SHIP_ITEM,SOLUTION,STATISTICAL_JOURNAL_ENTRY,STORE_PICKUP_FULFILLMENT,SUBSCRIPTION,SUBSCRIPTION_CHANGE_ORDER,SUBSCRIPTION_LINE,SUBSCRIPTION_PLAN,SUBSIDIARY,SUBSIDIARY_SETTINGS,SUBTOTAL_ITEM,SUITELET,SUPPLY_CHAIN_SNAPSHOT,SUPPLY_CHAIN_SNAPSHOT_SIMULATION,SUPPORT_CASE,TASK,TAX_ACCT,TAX_GROUP,TAX_PERIOD,TAX_TYPE,TERM,TIME_BILL,TIME_ENTRY,TIME_OFF_CHANGE,TIME_OFF_PLAN,TIME_OFF_REQUEST,TIME_OFF_RULE,TIME_OFF_TYPE,TIME_SHEET,TOPIC,TRANSFER_ORDER,UNITS_TYPE,UNLOCKED_TIME_PERIOD,USAGE,USEREVENT_SCRIPT,VENDOR,VENDOR_BILL,VENDOR_CATEGORY,VENDOR_CREDIT,VENDOR_PAYMENT,VENDOR_PREPAYMENT,VENDOR_PREPAYMENT_APPLICATION,VENDOR_RETURN_AUTHORIZATION,VENDOR_SUBSIDIARY_RELATIONSHIP,WAVE,WBS,WEBSITE,WORKFLOW_ACTION_SCRIPT,WORK_ORDER,WORK_ORDER_CLOSE,WORK_ORDER_COMPLETION,WORK_ORDER_ISSUE,WORKPLACE,ZONE|},",
			"    id: ${2:0}",
			"});"
		],
		"description": "NetSuite Record.delete()"
	},
	"SuiteScript Record.transform()": {
		"prefix": "record.transform",
		"body": [
			"var rec = record.transform({",
			"    fromType: record.Type.${1|ACCOUNT,ACCOUNTING_BOOK,ACCOUNTING_CONTEXT,ACCOUNTING_PERIOD,ADV_INTER_COMPANY_JOURNAL_ENTRY,ALLOCATION_SCHEDULE,AMORTIZATION_SCHEDULE,AMORTIZATION_TEMPLATE,AS_CHARGED_PROJECT_REVENUE_RULE,ASSEMBLY_BUILD,ASSEMBLY_ITEM,ASSEMBLY_UNBUILD,BALANCE_TRX_BY_SEGMENTS,BILLING_ACCOUNT,BILLING_CLASS,BILLING_RATE_CARD,BILLING_REVENUE_EVENT,BILLING_SCHEDULE,BIN,BIN_TRANSFER,BIN_WORKSHEET,BLANKET_PURCHASE_ORDER,BOM,BOM_REVISION,BONUS,BONUS_TYPE,BUDGET_EXCHANGE_RATE,BULK_OWNERSHIP_TRANSFER,BUNDLE_INSTALLATION_SCRIPT,CALENDAR_EVENT,CAMPAIGN,CAMPAIGN_RESPONSE,CAMPAIGN_TEMPLATE,CASH_REFUND,CASH_SALE,CHARGE,CHARGE_RULE,CHECK,CLASSIFICATION,CLIENT_SCRIPT,CMS_CONTENT,CMS_CONTENT_TYPE,CMS_PAGE,COMMERCE_CATEGORY,COMPETITOR,CONSOLIDATED_EXCHANGE_RATE,CONTACT,CONTACT_CATEGORY,CONTACT_ROLE,COST_CATEGORY,COUPON_CODE,CREDIT_CARD_CHARGE,CREDIT_CARD_REFUND,CREDIT_MEMO,CURRENCY,CUSTOM_PURCHASE,CUSTOMER,CUSTOMER_CATEGORY,CUSTOMER_DEPOSIT,CUSTOMER_MESSAGE,CUSTOMER_PAYMENT,CUSTOMER_PAYMENT_AUTHORIZATION,CUSTOM_RECORD,CUSTOMER_REFUND,CUSTOMER_STATUS,CUSTOMER_SUBSIDIARY_RELATIONSHIP,CUSTOM_TRANSACTION,DEPARTMENT,DEPOSIT,DEPOSIT_APPLICATION,DESCRIPTION_ITEM,DISCOUNT_ITEM,DOWNLOAD_ITEM,EMAIL_TEMPLATE,EMPLOYEE,EMPLOYEE_CHANGE_REQUEST,EMPLOYEE_CHANGE_TYPE,ENTITY_ACCOUNT_MAPPING,ESTIMATE,EXPENSE_AMORTIZATION_EVENT,EXPENSE_CATEGORY,EXPENSE_PLAN,EXPENSE_REPORT,FAIR_VALUE_PRICE,FINANCIAL_INSTITUTION,FIXED_AMOUNT_PROJECT_REVENUE_RULE,FOLDER,FULFILLMENT_REQUEST,GENERAL_TOKEN,GENERIC_RESOURCE,GIFT_CERTIFICATE,GIFT_CERTIFICATE_ITEM,GLOBAL_ACCOUNT_MAPPING,GLOBAL_INVENTORY_RELATIONSHIP,GL_NUMBERING_SEQUENCE,GOAL,INBOUND_SHIPMENT,INTERCOMP_ALLOCATION_SCHEDULE,INTER_COMPANY_JOURNAL_ENTRY,INTER_COMPANY_TRANSFER_ORDER,INVENTORY_ADJUSTMENT,INVENTORY_COST_REVALUATION,INVENTORY_COUNT,INVENTORY_DETAIL,INVENTORY_ITEM,INVENTORY_NUMBER,INVENTORY_STATUS,INVENTORY_STATUS_CHANGE,INVENTORY_TRANSFER,INVOICE,ISSUE,ISSUE_PRODUCT,ISSUE_PRODUCT_VERSION,ITEM_ACCOUNT_MAPPING,ITEM_COLLECTION,ITEM_COLLECTION_ITEM_MAP,ITEM_DEMAND_PLAN,ITEM_FULFILLMENT,ITEM_GROUP,ITEM_LOCATION_CONFIGURATION,ITEM_PROCESS_FAMILY,ITEM_PROCESS_GROUP,ITEM_RECEIPT,ITEM_REVISION,ITEM_SUPPLY_PLAN,JOB,JOB_STATUS,JOB_TYPE,JOURNAL_ENTRY,KIT_ITEM,LABOR_ BASED_PROJECT_REVENUE_RULE,LEAD,LOCATION,LOT_NUMBERED_ASSEMBLY_ITEM,LOT_NUMBERED_INVENTORY_ITEM,MANUFACTURING_COST_TEMPLATE,MANUFACTURING_OPERATION_TASK,MANUFACTURING_ROUTING,MAP_REDUCE_SCRIPT,MARKUP_ITEM,MASSUPDATE_SCRIPT,MEM_DOC,MERCHANDISE_HIERARCHY_LEVEL,MERCHANDISE_HIERARCHY_NODE,MERCHANDISE_HIERARCHY_VERSION,MESSAGE,MFG_PLANNED_TIME,NEXUS,NON_INVENTORY_ITEM,NOTE,NOTE_TYPE,OPPORTUNITY,ORDER_SCHEDULE,OTHER_CHARGE_ITEM,OTHER_NAME,OTHER_NAME_CATEGORY,PARTNER,PARTNER_CATEGORY,PARTNER_COMMISSION_PLAN,PAYCHECK,PAYCHECK_JOURNAL,PAYMENT_CARD,PAYMENT_CARD_TOKEN,PAYMENT_ITEM,PAYMENT_METHOD,PAYROLL_ITEM,PCT_COMPLETE_PROJECT_REVENUE_RULE,PERFORMANCE_METRIC,PERFORMANCE_REVIEW,PERFORMANCE_REVIEW_SCHEDULE,PERIOD_END_JOURNAL,PHONE_CALL,PICK_STRATEGY,PICK_TASK,PORTLET,PRICE_BOOK,PRICE_LEVEL,PRICE_PLAN,PRICING_GROUP,PROJECT_EXPENSE_TYPE,PROJECT_TASK,PROJECT_TEMPLATE,PROMOTION_CODE,PROSPECT,PURCHASE_CONTRACT,PURCHASE_ORDER,PURCHASE_REQUISITION,REALLOCATE_ITEM,RECEIVE_INBOUND_SHIPMENT,RESOURCE_ALLOCATION,RESTLET,RETURN_AUTHORIZATION,REVENUE_ARRANGEMENT,REVENUE_COMMITMENT,REVENUE_COMMITMENT_REVERSAL,REVENUE_PLAN,REV_REC_SCHEDULE,REV_REC_TEMPLATE,SALES_ORDER,SALES_ROLE,SALES_TAX_ITEM,SCHEDULED_SCRIPT,SCHEDULED_SCRIPT_INSTANCE,SCRIPT_DEPLOYMENT,SERIALIZED_ASSEMBLY_ITEM,SERIALIZED_INVENTORY_ITEM,SERVICE_ITEM,SHIP_ITEM,SOLUTION,STATISTICAL_JOURNAL_ENTRY,STORE_PICKUP_FULFILLMENT,SUBSCRIPTION,SUBSCRIPTION_CHANGE_ORDER,SUBSCRIPTION_LINE,SUBSCRIPTION_PLAN,SUBSIDIARY,SUBSIDIARY_SETTINGS,SUBTOTAL_ITEM,SUITELET,SUPPLY_CHAIN_SNAPSHOT,SUPPLY_CHAIN_SNAPSHOT_SIMULATION,SUPPORT_CASE,TASK,TAX_ACCT,TAX_GROUP,TAX_PERIOD,TAX_TYPE,TERM,TIME_BILL,TIME_ENTRY,TIME_OFF_CHANGE,TIME_OFF_PLAN,TIME_OFF_REQUEST,TIME_OFF_RULE,TIME_OFF_TYPE,TIME_SHEET,TOPIC,TRANSFER_ORDER,UNITS_TYPE,UNLOCKED_TIME_PERIOD,USAGE,USEREVENT_SCRIPT,VENDOR,VENDOR_BILL,VENDOR_CATEGORY,VENDOR_CREDIT,VENDOR_PAYMENT,VENDOR_PREPAYMENT,VENDOR_PREPAYMENT_APPLICATION,VENDOR_RETURN_AUTHORIZATION,VENDOR_SUBSIDIARY_RELATIONSHIP,WAVE,WBS,WEBSITE,WORKFLOW_ACTION_SCRIPT,WORK_ORDER,WORK_ORDER_CLOSE,WORK_ORDER_COMPLETION,WORK_ORDER_ISSUE,WORKPLACE,ZONE|},",
			"    fromId: ${2:0},",
			"    toType: record.Type.${3|ACCOUNT,ACCOUNTING_BOOK,ACCOUNTING_CONTEXT,ACCOUNTING_PERIOD,ADV_INTER_COMPANY_JOURNAL_ENTRY,ALLOCATION_SCHEDULE,AMORTIZATION_SCHEDULE,AMORTIZATION_TEMPLATE,AS_CHARGED_PROJECT_REVENUE_RULE,ASSEMBLY_BUILD,ASSEMBLY_ITEM,ASSEMBLY_UNBUILD,BALANCE_TRX_BY_SEGMENTS,BILLING_ACCOUNT,BILLING_CLASS,BILLING_RATE_CARD,BILLING_REVENUE_EVENT,BILLING_SCHEDULE,BIN,BIN_TRANSFER,BIN_WORKSHEET,BLANKET_PURCHASE_ORDER,BOM,BOM_REVISION,BONUS,BONUS_TYPE,BUDGET_EXCHANGE_RATE,BULK_OWNERSHIP_TRANSFER,BUNDLE_INSTALLATION_SCRIPT,CALENDAR_EVENT,CAMPAIGN,CAMPAIGN_RESPONSE,CAMPAIGN_TEMPLATE,CASH_REFUND,CASH_SALE,CHARGE,CHARGE_RULE,CHECK,CLASSIFICATION,CLIENT_SCRIPT,CMS_CONTENT,CMS_CONTENT_TYPE,CMS_PAGE,COMMERCE_CATEGORY,COMPETITOR,CONSOLIDATED_EXCHANGE_RATE,CONTACT,CONTACT_CATEGORY,CONTACT_ROLE,COST_CATEGORY,COUPON_CODE,CREDIT_CARD_CHARGE,CREDIT_CARD_REFUND,CREDIT_MEMO,CURRENCY,CUSTOM_PURCHASE,CUSTOMER,CUSTOMER_CATEGORY,CUSTOMER_DEPOSIT,CUSTOMER_MESSAGE,CUSTOMER_PAYMENT,CUSTOMER_PAYMENT_AUTHORIZATION,CUSTOM_RECORD,CUSTOMER_REFUND,CUSTOMER_STATUS,CUSTOMER_SUBSIDIARY_RELATIONSHIP,CUSTOM_TRANSACTION,DEPARTMENT,DEPOSIT,DEPOSIT_APPLICATION,DESCRIPTION_ITEM,DISCOUNT_ITEM,DOWNLOAD_ITEM,EMAIL_TEMPLATE,EMPLOYEE,EMPLOYEE_CHANGE_REQUEST,EMPLOYEE_CHANGE_TYPE,ENTITY_ACCOUNT_MAPPING,ESTIMATE,EXPENSE_AMORTIZATION_EVENT,EXPENSE_CATEGORY,EXPENSE_PLAN,EXPENSE_REPORT,FAIR_VALUE_PRICE,FINANCIAL_INSTITUTION,FIXED_AMOUNT_PROJECT_REVENUE_RULE,FOLDER,FULFILLMENT_REQUEST,GENERAL_TOKEN,GENERIC_RESOURCE,GIFT_CERTIFICATE,GIFT_CERTIFICATE_ITEM,GLOBAL_ACCOUNT_MAPPING,GLOBAL_INVENTORY_RELATIONSHIP,GL_NUMBERING_SEQUENCE,GOAL,INBOUND_SHIPMENT,INTERCOMP_ALLOCATION_SCHEDULE,INTER_COMPANY_JOURNAL_ENTRY,INTER_COMPANY_TRANSFER_ORDER,INVENTORY_ADJUSTMENT,INVENTORY_COST_REVALUATION,INVENTORY_COUNT,INVENTORY_DETAIL,INVENTORY_ITEM,INVENTORY_NUMBER,INVENTORY_STATUS,INVENTORY_STATUS_CHANGE,INVENTORY_TRANSFER,INVOICE,ISSUE,ISSUE_PRODUCT,ISSUE_PRODUCT_VERSION,ITEM_ACCOUNT_MAPPING,ITEM_COLLECTION,ITEM_COLLECTION_ITEM_MAP,ITEM_DEMAND_PLAN,ITEM_FULFILLMENT,ITEM_GROUP,ITEM_LOCATION_CONFIGURATION,ITEM_PROCESS_FAMILY,ITEM_PROCESS_GROUP,ITEM_RECEIPT,ITEM_REVISION,ITEM_SUPPLY_PLAN,JOB,JOB_STATUS,JOB_TYPE,JOURNAL_ENTRY,KIT_ITEM,LABOR_ BASED_PROJECT_REVENUE_RULE,LEAD,LOCATION,LOT_NUMBERED_ASSEMBLY_ITEM,LOT_NUMBERED_INVENTORY_ITEM,MANUFACTURING_COST_TEMPLATE,MANUFACTURING_OPERATION_TASK,MANUFACTURING_ROUTING,MAP_REDUCE_SCRIPT,MARKUP_ITEM,MASSUPDATE_SCRIPT,MEM_DOC,MERCHANDISE_HIERARCHY_LEVEL,MERCHANDISE_HIERARCHY_NODE,MERCHANDISE_HIERARCHY_VERSION,MESSAGE,MFG_PLANNED_TIME,NEXUS,NON_INVENTORY_ITEM,NOTE,NOTE_TYPE,OPPORTUNITY,ORDER_SCHEDULE,OTHER_CHARGE_ITEM,OTHER_NAME,OTHER_NAME_CATEGORY,PARTNER,PARTNER_CATEGORY,PARTNER_COMMISSION_PLAN,PAYCHECK,PAYCHECK_JOURNAL,PAYMENT_CARD,PAYMENT_CARD_TOKEN,PAYMENT_ITEM,PAYMENT_METHOD,PAYROLL_ITEM,PCT_COMPLETE_PROJECT_REVENUE_RULE,PERFORMANCE_METRIC,PERFORMANCE_REVIEW,PERFORMANCE_REVIEW_SCHEDULE,PERIOD_END_JOURNAL,PHONE_CALL,PICK_STRATEGY,PICK_TASK,PORTLET,PRICE_BOOK,PRICE_LEVEL,PRICE_PLAN,PRICING_GROUP,PROJECT_EXPENSE_TYPE,PROJECT_TASK,PROJECT_TEMPLATE,PROMOTION_CODE,PROSPECT,PURCHASE_CONTRACT,PURCHASE_ORDER,PURCHASE_REQUISITION,REALLOCATE_ITEM,RECEIVE_INBOUND_SHIPMENT,RESOURCE_ALLOCATION,RESTLET,RETURN_AUTHORIZATION,REVENUE_ARRANGEMENT,REVENUE_COMMITMENT,REVENUE_COMMITMENT_REVERSAL,REVENUE_PLAN,REV_REC_SCHEDULE,REV_REC_TEMPLATE,SALES_ORDER,SALES_ROLE,SALES_TAX_ITEM,SCHEDULED_SCRIPT,SCHEDULED_SCRIPT_INSTANCE,SCRIPT_DEPLOYMENT,SERIALIZED_ASSEMBLY_ITEM,SERIALIZED_INVENTORY_ITEM,SERVICE_ITEM,SHIP_ITEM,SOLUTION,STATISTICAL_JOURNAL_ENTRY,STORE_PICKUP_FULFILLMENT,SUBSCRIPTION,SUBSCRIPTION_CHANGE_ORDER,SUBSCRIPTION_LINE,SUBSCRIPTION_PLAN,SUBSIDIARY,SUBSIDIARY_SETTINGS,SUBTOTAL_ITEM,SUITELET,SUPPLY_CHAIN_SNAPSHOT,SUPPLY_CHAIN_SNAPSHOT_SIMULATION,SUPPORT_CASE,TASK,TAX_ACCT,TAX_GROUP,TAX_PERIOD,TAX_TYPE,TERM,TIME_BILL,TIME_ENTRY,TIME_OFF_CHANGE,TIME_OFF_PLAN,TIME_OFF_REQUEST,TIME_OFF_RULE,TIME_OFF_TYPE,TIME_SHEET,TOPIC,TRANSFER_ORDER,UNITS_TYPE,UNLOCKED_TIME_PERIOD,USAGE,USEREVENT_SCRIPT,VENDOR,VENDOR_BILL,VENDOR_CATEGORY,VENDOR_CREDIT,VENDOR_PAYMENT,VENDOR_PREPAYMENT,VENDOR_PREPAYMENT_APPLICATION,VENDOR_RETURN_AUTHORIZATION,VENDOR_SUBSIDIARY_RELATIONSHIP,WAVE,WBS,WEBSITE,WORKFLOW_ACTION_SCRIPT,WORK_ORDER,WORK_ORDER_CLOSE,WORK_ORDER_COMPLETION,WORK_ORDER_ISSUE,WORKPLACE,ZONE|},",
			"    isDynamic: ${4|false,true|},",
			"    defaultValues: {",
			"        $5",
			"    }",
			"});"
		],
		"description": "NetSuite Record.transform()"
	},
	"SuiteScript Record.submitFields()": {
		"prefix": "record.submitFields",
		"body": [
			"record.submitFields({",
			"    type: record.Type.${1|ACCOUNT,ACCOUNTING_BOOK,ACCOUNTING_CONTEXT,ACCOUNTING_PERIOD,ADV_INTER_COMPANY_JOURNAL_ENTRY,ALLOCATION_SCHEDULE,AMORTIZATION_SCHEDULE,AMORTIZATION_TEMPLATE,AS_CHARGED_PROJECT_REVENUE_RULE,ASSEMBLY_BUILD,ASSEMBLY_ITEM,ASSEMBLY_UNBUILD,BALANCE_TRX_BY_SEGMENTS,BILLING_ACCOUNT,BILLING_CLASS,BILLING_RATE_CARD,BILLING_REVENUE_EVENT,BILLING_SCHEDULE,BIN,BIN_TRANSFER,BIN_WORKSHEET,BLANKET_PURCHASE_ORDER,BOM,BOM_REVISION,BONUS,BONUS_TYPE,BUDGET_EXCHANGE_RATE,BULK_OWNERSHIP_TRANSFER,BUNDLE_INSTALLATION_SCRIPT,CALENDAR_EVENT,CAMPAIGN,CAMPAIGN_RESPONSE,CAMPAIGN_TEMPLATE,CASH_REFUND,CASH_SALE,CHARGE,CHARGE_RULE,CHECK,CLASSIFICATION,CLIENT_SCRIPT,CMS_CONTENT,CMS_CONTENT_TYPE,CMS_PAGE,COMMERCE_CATEGORY,COMPETITOR,CONSOLIDATED_EXCHANGE_RATE,CONTACT,CONTACT_CATEGORY,CONTACT_ROLE,COST_CATEGORY,COUPON_CODE,CREDIT_CARD_CHARGE,CREDIT_CARD_REFUND,CREDIT_MEMO,CURRENCY,CUSTOM_PURCHASE,CUSTOMER,CUSTOMER_CATEGORY,CUSTOMER_DEPOSIT,CUSTOMER_MESSAGE,CUSTOMER_PAYMENT,CUSTOMER_PAYMENT_AUTHORIZATION,CUSTOM_RECORD,CUSTOMER_REFUND,CUSTOMER_STATUS,CUSTOMER_SUBSIDIARY_RELATIONSHIP,CUSTOM_TRANSACTION,DEPARTMENT,DEPOSIT,DEPOSIT_APPLICATION,DESCRIPTION_ITEM,DISCOUNT_ITEM,DOWNLOAD_ITEM,EMAIL_TEMPLATE,EMPLOYEE,EMPLOYEE_CHANGE_REQUEST,EMPLOYEE_CHANGE_TYPE,ENTITY_ACCOUNT_MAPPING,ESTIMATE,EXPENSE_AMORTIZATION_EVENT,EXPENSE_CATEGORY,EXPENSE_PLAN,EXPENSE_REPORT,FAIR_VALUE_PRICE,FINANCIAL_INSTITUTION,FIXED_AMOUNT_PROJECT_REVENUE_RULE,FOLDER,FULFILLMENT_REQUEST,GENERAL_TOKEN,GENERIC_RESOURCE,GIFT_CERTIFICATE,GIFT_CERTIFICATE_ITEM,GLOBAL_ACCOUNT_MAPPING,GLOBAL_INVENTORY_RELATIONSHIP,GL_NUMBERING_SEQUENCE,GOAL,INBOUND_SHIPMENT,INTERCOMP_ALLOCATION_SCHEDULE,INTER_COMPANY_JOURNAL_ENTRY,INTER_COMPANY_TRANSFER_ORDER,INVENTORY_ADJUSTMENT,INVENTORY_COST_REVALUATION,INVENTORY_COUNT,INVENTORY_DETAIL,INVENTORY_ITEM,INVENTORY_NUMBER,INVENTORY_STATUS,INVENTORY_STATUS_CHANGE,INVENTORY_TRANSFER,INVOICE,ISSUE,ISSUE_PRODUCT,ISSUE_PRODUCT_VERSION,ITEM_ACCOUNT_MAPPING,ITEM_COLLECTION,ITEM_COLLECTION_ITEM_MAP,ITEM_DEMAND_PLAN,ITEM_FULFILLMENT,ITEM_GROUP,ITEM_LOCATION_CONFIGURATION,ITEM_PROCESS_FAMILY,ITEM_PROCESS_GROUP,ITEM_RECEIPT,ITEM_REVISION,ITEM_SUPPLY_PLAN,JOB,JOB_STATUS,JOB_TYPE,JOURNAL_ENTRY,KIT_ITEM,LABOR_ BASED_PROJECT_REVENUE_RULE,LEAD,LOCATION,LOT_NUMBERED_ASSEMBLY_ITEM,LOT_NUMBERED_INVENTORY_ITEM,MANUFACTURING_COST_TEMPLATE,MANUFACTURING_OPERATION_TASK,MANUFACTURING_ROUTING,MAP_REDUCE_SCRIPT,MARKUP_ITEM,MASSUPDATE_SCRIPT,MEM_DOC,MERCHANDISE_HIERARCHY_LEVEL,MERCHANDISE_HIERARCHY_NODE,MERCHANDISE_HIERARCHY_VERSION,MESSAGE,MFG_PLANNED_TIME,NEXUS,NON_INVENTORY_ITEM,NOTE,NOTE_TYPE,OPPORTUNITY,ORDER_SCHEDULE,OTHER_CHARGE_ITEM,OTHER_NAME,OTHER_NAME_CATEGORY,PARTNER,PARTNER_CATEGORY,PARTNER_COMMISSION_PLAN,PAYCHECK,PAYCHECK_JOURNAL,PAYMENT_CARD,PAYMENT_CARD_TOKEN,PAYMENT_ITEM,PAYMENT_METHOD,PAYROLL_ITEM,PCT_COMPLETE_PROJECT_REVENUE_RULE,PERFORMANCE_METRIC,PERFORMANCE_REVIEW,PERFORMANCE_REVIEW_SCHEDULE,PERIOD_END_JOURNAL,PHONE_CALL,PICK_STRATEGY,PICK_TASK,PORTLET,PRICE_BOOK,PRICE_LEVEL,PRICE_PLAN,PRICING_GROUP,PROJECT_EXPENSE_TYPE,PROJECT_TASK,PROJECT_TEMPLATE,PROMOTION_CODE,PROSPECT,PURCHASE_CONTRACT,PURCHASE_ORDER,PURCHASE_REQUISITION,REALLOCATE_ITEM,RECEIVE_INBOUND_SHIPMENT,RESOURCE_ALLOCATION,RESTLET,RETURN_AUTHORIZATION,REVENUE_ARRANGEMENT,REVENUE_COMMITMENT,REVENUE_COMMITMENT_REVERSAL,REVENUE_PLAN,REV_REC_SCHEDULE,REV_REC_TEMPLATE,SALES_ORDER,SALES_ROLE,SALES_TAX_ITEM,SCHEDULED_SCRIPT,SCHEDULED_SCRIPT_INSTANCE,SCRIPT_DEPLOYMENT,SERIALIZED_ASSEMBLY_ITEM,SERIALIZED_INVENTORY_ITEM,SERVICE_ITEM,SHIP_ITEM,SOLUTION,STATISTICAL_JOURNAL_ENTRY,STORE_PICKUP_FULFILLMENT,SUBSCRIPTION,SUBSCRIPTION_CHANGE_ORDER,SUBSCRIPTION_LINE,SUBSCRIPTION_PLAN,SUBSIDIARY,SUBSIDIARY_SETTINGS,SUBTOTAL_ITEM,SUITELET,SUPPLY_CHAIN_SNAPSHOT,SUPPLY_CHAIN_SNAPSHOT_SIMULATION,SUPPORT_CASE,TASK,TAX_ACCT,TAX_GROUP,TAX_PERIOD,TAX_TYPE,TERM,TIME_BILL,TIME_ENTRY,TIME_OFF_CHANGE,TIME_OFF_PLAN,TIME_OFF_REQUEST,TIME_OFF_RULE,TIME_OFF_TYPE,TIME_SHEET,TOPIC,TRANSFER_ORDER,UNITS_TYPE,UNLOCKED_TIME_PERIOD,USAGE,USEREVENT_SCRIPT,VENDOR,VENDOR_BILL,VENDOR_CATEGORY,VENDOR_CREDIT,VENDOR_PAYMENT,VENDOR_PREPAYMENT,VENDOR_PREPAYMENT_APPLICATION,VENDOR_RETURN_AUTHORIZATION,VENDOR_SUBSIDIARY_RELATIONSHIP,WAVE,WBS,WEBSITE,WORKFLOW_ACTION_SCRIPT,WORK_ORDER,WORK_ORDER_CLOSE,WORK_ORDER_COMPLETION,WORK_ORDER_ISSUE,WORKPLACE,ZONE|},",
			"    id: ${2:''},",
			"    values: {",
			"        $3",
			"    }",
			"});"
		],
		"description": "NetSuite getSublistText"
	},
	"SuiteScript record.setValue()": {
		"prefix": ".setValue",
		"body": [
			".setValue({",
			"    fieldId: ${1:''},",
			"    value: ${2:''},",
			"    ignoreFieldChange: ${3|false,true|}",
			"});"
		],
		"description": "NetSuite setValue"
	},
	"SuiteScript record.setText()": {
		"prefix": ".setText",
		"body": [
			".setText({",
			"    fieldId: ${1:''},",
			"    text: ${2:''},",
			"    ignoreFieldChange: ${3|false,true|}",
			"});"
		],
		"description": "NetSuite setText"
	},
	"SuiteScript record.setSublistValue()": {
		"prefix": ".setSublistValue",
		"body": [
			".setSublistValue({",
			"    sublistId:${1:''},",
			"    fieldId: ${2:''},",
			"    line: ${3:''},",
			"    value: ${4:''}",
			"});"
		],
		"description": "NetSuite setSublistValue"
	},
	"SuiteScript record.setSublistText()": {
		"prefix": ".setSublistText",
		"body": [
			".setSublistText({",
			"    sublistId:${1:''},",
			"    fieldId: ${2:''},",
			"    line: ${3:''},",
			"    text: ${4:''}",
			"});"
		],
		"description": "NetSuite setSublistText"
	},
	"SuiteScript record.getValue()": {
		"prefix": ".getValue",
		"body": [
			".getValue({",
			"    fieldId: ${1:''}",
			"});"
		],
		"description": "NetSuite getValue"
	},
	"SuiteScript record.getText()": {
		"prefix": ".getText",
		"body": [
			".getText({",
			"    fieldId: ${1:''}",
			"});"
		],
		"description": "NetSuite getText"
	},
	"SuiteScript record.getSublistValue()": {
		"prefix": ".getSublistValue",
		"body": [
			".getSublistValue({",
			"    sublistId:${1:''},",
			"    fieldId: ${2:''},",
			"    line: ${3:''}",
			"});"
		],
		"description": "NetSuite getSublistValue"
	},
	"SuiteScript record.getSublistText()": {
		"prefix": ".getSublistText",
		"body": [
			".getSublistText({",
			"    sublistId:${1:''},",
			"    fieldId: ${2:''},",
			"    line: ${3:''}",
			"});"
		],
		"description": "NetSuite getSublistText"
	},
	"SuiteScript Form.addField()": {
		"prefix": "form.addField",
		"body": [
			"var field = form.addField({",
			"    id: '${1:custpage_}',",
			"    type: serverWidget.FieldType.${2|CHECKBOX,CURRENCY,DATE,DATETIME,DATETIMETZ,EMAIL,FILE,FLOAT,HELP,INLINEHTML,INTEGER,IMAGE,LABEL,LONGTEXT,MULTISELECT,PASSWORD,PERCENT,PHONE,SELECT,RADIO,RICHTEXT,TEXT,TEXTAREA,TIMEOFDAY,URL|},",
			"    label: '${3:Text}'",
			"});",
			""
		],
		"description": "NetSuite Form.addField"
	}
}